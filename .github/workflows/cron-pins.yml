name: Cron Pins

on:
  schedule:
    - cron: '*/10 * * * *'
  workflow_dispatch:

jobs:
  update:
    name: Update pin statuses and size
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: ['staging', 'production']
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Install dependencies
        uses: bahmutov/npm-install@v1

      - name: Run job
        env:
          DEBUG: '*'
          ENV: ${{ matrix.env }}
          DATABASE: ${{ secrets.PROD_DATABASE }}
          STAGING_DATABASE: ${{ secrets.STAGING_DATABASE }}
          PG_REST_JWT: ${{ secrets.PROD_PG_REST_JWT }}
          STAGING_PG_REST_JWT: ${{ secrets.STAGING_PG_REST_JWT }}
          PG_REST_URL: ${{ secrets.PROD_PG_REST_URL }}
          STAGING_PG_REST_URL: ${{ secrets.STAGING_PG_REST_URL }}
          FAUNA_KEY: ${{ secrets.PROD_FAUNA_KEY }}
          STAGING_FAUNA_KEY: ${{ secrets.STAGING_FAUNA_KEY }}
          CLUSTER_API_URL: ${{ secrets.CLUSTER_API_URL }}
          CLUSTER_BASIC_AUTH_TOKEN: ${{ secrets.CLUSTER_BASIC_AUTH_TOKEN }}
          CLUSTER_IPFS_PROXY_API_URL: ${{ secrets.CLUSTER_IPFS_PROXY_API_URL }}
          CLUSTER_IPFS_PROXY_BASIC_AUTH_TOKEN: ${{ secrets.CLUSTER_IPFS_PROXY_BASIC_AUTH_TOKEN }}
        run: npm run start:pins -w packages/cron
